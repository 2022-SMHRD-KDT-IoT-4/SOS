<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sos.mapper.SosMapper">
    
    <!-- 로그인 기능을 위한 DB값 조회(Select) -->
    <select id="UserLogin" parameterType="com.sos.domain.tbl_user" resultType="com.sos.domain.tbl_user">
		select * from tbl_user where user_id = #{user_id} and user_pw = #{user_pw}
    </select>
    <!-- 회원가입 정보를 DB에 삽입(Insert) -->
    <insert id="UserJoin" parameterType="com.sos.domain.tbl_user">
		insert into tbl_user values(#{user_id}, #{user_pw}, #{user_nick}, #{user_type}, sysdate)        
    </insert>
    <!-- GPS센서 값 DB에 삽입(Insert) -->
    <insert id="gpstest" parameterType="com.sos.domain.tbl_location">
        insert into tbl_location values(tbl_location_SEQ.nextval, 4, #{latitude}, #{longitude})
    </insert>
    <!-- Water센서 값 DB에 삽입(Insert) -->
    <insert id="watertest" parameterType="com.sos.domain.tbl_water">
         insert into tbl_water(jacket_seq, water_pressure, water_date, water_temperature, water_detect) values(4, #{water_pressure}, sysdate, #{water_temperature}, #{water_detect})
    </insert>
    <!-- 구명조끼 등록 정보 DB에 삽입(Insert) -->
    <insert id="registjacket" parameterType="com.sos.domain.tbl_jacket">
		insert into tbl_jacket(user_id, ship_seq, jacket_date, product_id) values(#{user_id}, 4, sysdate, #{product_id})        
    </insert>
    <!-- Water센서 DB값 조회(Select) : 최근 이력 정보 조회 -->
    <select id="getdate" parameterType="String" resultType="com.sos.domain.tbl_water">
        select * from tbl_water where jacket_seq = #{jacket_seq} and water_date = (select max(water_date) from tbl_water where jacket_seq=#{jacket_seq})
    </select>
    <!-- Jacket 정보 DB값 조회(Select) -->
    <select id="getjacketinfo" resultType="com.sos.domain.tbl_jacket">
        select * from tbl_jacket
    </select>
    <!-- 공지사항 정보 DB에 삽입 -->
    <insert id="noticeInsert" parameterType="com.sos.domain.tbl_notice">
        insert into tbl_notice(notice_subject, notice_content, notice_file, notice_date, notice_id) values(#{notice_subject}, #{notice_content}, #{notice_file}, sysdate, #{notice_id})
    </insert>
    <!-- 질문사항 정보 DB에 삽입 -->
    <insert id="questionInsert" parameterType="com.sos.domain.tbl_question">
        insert into tbl_question(q_subject, q_content, q_file, q_date, user_id) values(#{q_subject}, #{q_content}, #{q_file}, sysdate, #{user_id})
    </insert>
    <!-- AS 정보 DB에 삽입 -->
    <insert id="asInsert" parameterType="com.sos.domain.tbl_as">
        insert into tbl_as(as_subject, as_content, as_file, as_date, user_id) values(#{as_subject}, #{as_content}, #{as_file}, sysdate, #{user_id})
    </insert>
    <!-- 공지사항 정보 조회 (Select) -->
    <select id="noticelist" resultType="com.sos.domain.tbl_notice">
        select * from tbl_notice
    </select>
    <!-- 공지사항 글 조회 (Select) -->
    <select id="OneNotice" parameterType="int" resultType="com.sos.domain.tbl_notice">
        select * from tbl_notice where notice_seq = #{notice_seq}
    </select>
    <!-- 공지사항 글 수정 (Update) -->
    <update id="noticeUpdate" parameterType="com.sos.domain.tbl_notice">
		update tbl_notice set notice_subject = #{notice_subject}, notice_content = #{notice_content}, notice_file = #{notice_file} where notice_seq = #{notice_seq}        
    </update>
    <!-- 공지사항 조회수 증가 (Update) -->
    <update id="noticeCount">
        update tbl_notice set notice_count = notice_count+1
    </update>
</mapper>